name: Generate SDK

on:
  push:
    branches:
      - '**'
      - '!master'

jobs:
  generate-sdk:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout specification repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Validate OpenAPI specification
        run: npm run validate
        continue-on-error: true  # TODO: убрать, когда почините валидацию

      - name: Generate PHP SDK
        run: npm run generate-php

      - name: Clone → Copy → Commit/Push → PR (one step)
        shell: bash
        env:
          SDK_BRANCH: ${{ github.ref_name }}
        run: |
          set -euo pipefail
          
          echo "::group::Clone external SDK repo"
          git clone "https://github.com/moysklad/php-remap-1.2-sdk.git" sdk-repo
          echo "::endgroup::"
          
          echo "::group::Copy generated SDK into external repo"
          if [ ! -d "clients/php" ]; then
            echo "Directory clients/php not found. Nothing to sync."
            exit 0
          fi
          rsync -a --delete "clients/php/" "sdk-repo/"
          echo "::endgroup::"
          
          echo "::group::Commit & push"
          cd sdk-repo
          git config user.name  "sdk-bot"
          git config user.email "sdk-bot@users.noreply.github.com"
          git checkout -B "${SDK_BRANCH}"
          git add -A
          
          if git diff --staged --quiet; then
            echo "No changes to commit in SDK repository. Skipping push & PR."
            exit 0
          fi
          
          git commit -m "Auto-generated PHP SDK from OpenAPI specification"
          git push --set-upstream origin "${SDK_BRANCH}"
          echo "::endgroup::"
          
          echo "::group::Create pull request"
          # Аутентифицируем gh (на раннерах уже установлен)
          echo "${GHUTOKEN:-$GH_TOKEN}" | gh auth login --with-token
          # Если PR уже есть — не падать
          gh pr view --repo "$SDK_REPO" "${SDK_BRANCH}" >/dev/null 2>&1 || \
          gh pr create \
            --repo "$SDK_REPO" \
            --title "Auto-generated SDK update" \
            --body "This PR contains auto-generated SDK updates from the OpenAPI specification." \
            --base main \
            --head "${SDK_BRANCH}"
          echo "::endgroup::"